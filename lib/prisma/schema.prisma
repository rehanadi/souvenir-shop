// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                String     @id @default(cuid())
  name              String?
  email             String?    @unique
  emailVerified     DateTime?  @map("email_verified")
  image             String?
  isAdmin           Boolean    @default(false)
  createdAt         DateTime   @default(now()) @map(name: "created_at")
  updatedAt         DateTime   @updatedAt @map(name: "updated_at")
  accounts          Account[]
  sessions          Session[]
  createdProducts   Product[]  @relation("CreatedProducts")
  updatedProducts   Product[]  @relation("UpdatedProducts")
  createdCategories Category[] @relation("CreatedCategories")
  updatedCategories Category[] @relation("UpdatedCategories")

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Product {
  id            String     @id @default(cuid())
  name          String
  slug          String     @unique
  image         String?
  description   String?
  price         Float      @default(0)
  isUseStock    Boolean    @default(false) @map(name: "is_use_stock")
  baseStock     Float      @default(0) @map(name: "base_stock")
  usedStock     Float      @default(0) @map(name: "used_stock")
  remainStock   Float      @default(0) @map(name: "remain_stock")
  rating        Float      @default(0)
  reviewsCount  Float      @default(0) @map(name: "reviews_count")
  isActive      Boolean    @default(true) @map(name: "is_active")
  createdBy     String?    @map(name: "created_by")
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedBy     String?    @map(name: "updated_by")
  updatedAt     DateTime   @updatedAt @map(name: "updated_at")
  createdByUser User?      @relation("CreatedProducts", fields: [createdBy], references: [id])
  updatedByUser User?      @relation("UpdatedProducts", fields: [updatedBy], references: [id])
  categories    Category[]

  @@index([slug])
  @@map(name: "products")
}

model Category {
  id            String    @id @default(cuid())
  name          String
  slug          String    @unique
  createdBy     String?   @map(name: "created_by")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedBy     String?   @map(name: "updated_by")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  createdByUser User?     @relation("CreatedCategories", fields: [createdBy], references: [id])
  updatedByUser User?     @relation("UpdatedCategories", fields: [updatedBy], references: [id])
  products      Product[]

  @@index([slug])
  @@map(name: "categories")
}

model Slider {
  id        String   @id @default(cuid())
  name      String
  image     String
  caption   String?
  url       String?
  isActive  Boolean  @default(true) @map(name: "is_active")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "sliders")
}
